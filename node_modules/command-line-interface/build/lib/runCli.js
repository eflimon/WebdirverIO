"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.runCli = void 0;
const addHelpCommandToCli_1 = require("./addHelpCommandToCli");
const getGetUsage_1 = require("./usage/getGetUsage");
const getRecommendCommand_1 = require("./recommend/getRecommendCommand");
const runCliRecursive_1 = require("./runCliRecursive");
const validateOnlyLeafCommandsHaveDefaultOptions_1 = require("./validateOnlyLeafCommandsHaveDefaultOptions");
const runCli = async function ({ rootCommand, argv, handlers = {} }) {
    const handlersWithDefaults = {
        commandFailed({ ex }) {
            // eslint-disable-next-line no-console
            console.error(ex);
        },
        commandUnknown({ unknownCommandName, recommendedCommandName }) {
            // eslint-disable-next-line no-console
            console.error(`Unknown command '${unknownCommandName}'. Did you mean '${recommendedCommandName}'?`);
        },
        optionInvalid({ reason }) {
            // eslint-disable-next-line no-console
            console.error(reason);
        },
        optionMissing({ optionDefinition }) {
            // eslint-disable-next-line no-console
            console.error(`Option '${optionDefinition.name}' is missing.`);
        },
        optionUnknown({ optionName }) {
            // eslint-disable-next-line no-console
            console.error(`Unknown option '${optionName}'.`);
        },
        ...handlers
    };
    (0, validateOnlyLeafCommandsHaveDefaultOptions_1.validateOnlyLeafCommandsHaveDefaultOptions)({
        command: rootCommand
    });
    const extendedRootCommand = (0, addHelpCommandToCli_1.addHelpCommandToCli)({ rootCommand });
    const recommendCommand = (0, getRecommendCommand_1.getRecommendCommand)({ rootCommand: extendedRootCommand });
    const getUsage = (0, getGetUsage_1.getGetUsage)({ rootCommand: extendedRootCommand });
    await (0, runCliRecursive_1.runCliRecursive)({
        command: extendedRootCommand,
        argv,
        handlers: handlersWithDefaults,
        getUsage,
        recommendCommand,
        level: 0,
        ancestorOptions: {},
        ancestorNames: []
    });
};
exports.runCli = runCli;
